{"version":3,"sources":["App.js","index.js"],"names":["App","useState","baseUrlSaved","setBaseUrlSaved","item","localStorage","getItem","err","console","log","baseUrl","setBaseUrl","selectedFile","setSelectedFile","waiting","setWaiting","resultPath","setResultPath","copied","setCopied","resultRef","useRef","className","ref","defaultValue","target","rel","href","type","value","placeholder","onChange","event","onClick","setItem","disabled","name","files","htmlFor","data","FormData","append","axios","post","then","res","path","current","select","document","execCommand","catch","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOAgKeA,EA7JH,WAAO,IAAD,EACwBC,oBAAS,GADjC,mBACTC,EADS,KACKC,EADL,OAEcF,oBAAS,WACrC,IACE,IAAMG,EAAOC,aAAaC,QAAQ,WAElC,OADAH,GAAgB,GACTC,GAAc,GACrB,MAAOG,GAEP,OADAC,QAAQC,IAAIF,GACL,OATK,mBAETG,EAFS,KAEAC,EAFA,OAYwBV,mBAAS,MAZjC,mBAYTW,EAZS,KAYKC,EAZL,OAacZ,oBAAS,GAbvB,mBAaTa,EAbS,KAaAC,EAbA,OAcoBd,mBAAS,IAd7B,mBAcTe,EAdS,KAcGC,EAdH,OAeYhB,oBAAS,GAfrB,mBAeTiB,EAfS,KAeDC,EAfC,KAgBVC,EAAYC,iBAAO,MA2CzB,OACE,oCACE,yBAAKC,UAAU,8BACb,yBAAKA,UAAU,gBAAf,kBAEF,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,wDACb,yBAAKA,UAAU,YACZN,EACC,yBAAKM,UAAU,2BACZJ,GACC,uBAAGI,UAAU,gCAAb,wBAIF,8BACEC,IAAKH,EACLI,aAAcR,EACdM,UAAU,iBAEZ,uBACEG,OAAO,SACPC,IAAI,sBACJC,KAAMX,EACNM,UAAU,qBAJZ,SAUF,qCAEF,yBAAKA,UAAU,oBACb,2BACEM,KAAK,OACLN,UAAU,eACVO,MAAOnB,GAAoB,GAC3BoB,YAAY,6CACZC,SA/EU,SAACC,GACvBrB,EAAWqB,EAAMP,OAAOI,OACxB1B,GAAgB,MA+EN,4BACEmB,UAAU,kBACVW,QA9EQ,WACpB5B,aAAa6B,QAAQ,UAAWxB,GAChCP,GAAgB,IA6EJgC,UAAUzB,GAHZ,SAQF,uBAAGY,UAAU,sCAAb,oBACoBZ,EAAU,SAD9B,KAC0C,IACvCR,EACC,0BAAMoB,UAAU,gBAAhB,SAEA,0BAAMA,UAAU,eAAhB,cAIHZ,GAAWR,EACV,6BACE,yBAAKoB,UAAU,oBACXR,EAwBA,2CAvBA,oCACE,yBAAKQ,UAAU,eACb,2BACEM,KAAK,OACLN,UAAU,oBACVc,KAAK,OACLL,SA5FH,SAACC,GACpBnB,EAAgBmB,EAAMP,OAAOY,MAAM,OA6Ff,2BAAOf,UAAU,oBAAoBgB,QAAQ,QAC1C1B,EAAeA,EAAawB,KAAO,gBAGxC,yBAAKd,UAAU,sBACb,4BACEA,UAAU,kBACVa,UAAUvB,EACVqB,QAlGH,SAACD,GACpBb,GAAU,GACVJ,GAAW,GACX,IAAIwB,EAAO,IAAIC,SACfD,EAAKE,OAAO,OAAQ7B,GACpB8B,IACGC,KADH,UACWjC,EADX,UAC4B6B,GACzBK,MAAK,SAACC,GACLrC,QAAQC,IAAIoC,GACZ9B,GAAW,GACXE,EAAcP,EAAUmC,EAAIN,KAAKO,MAnBrC1B,EAAU2B,QAAQC,SAClBC,SAASC,YAAY,QACrB/B,GAAU,MAoBPgC,OAAM,SAAC5C,GACNC,QAAQC,IAAIF,GACZQ,GAAW,GACXE,EAAc,4CAElBJ,EAAgB,QA6EI,cAeV,0C,YC/IduC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,SAASM,eAAe,W","file":"static/js/main.94170a5a.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [baseUrlSaved, setBaseUrlSaved] = useState(false);\n  const [baseUrl, setBaseUrl] = useState(() => {\n    try {\n      const item = localStorage.getItem('baseUrl');\n      setBaseUrlSaved(true);\n      return item ? item : '';\n    } catch (err) {\n      console.log(err);\n      return '';\n    }\n  });\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [waiting, setWaiting] = useState(false);\n  const [resultPath, setResultPath] = useState('');\n  const [copied, setCopied] = useState(false);\n  const resultRef = useRef(null);\n\n  const onBaseUrlChange = (event) => {\n    setBaseUrl(event.target.value);\n    setBaseUrlSaved(false);\n  };\n\n  const onBaseUrlSave = () => {\n    localStorage.setItem('baseUrl', baseUrl);\n    setBaseUrlSaved(true);\n  };\n\n  const copyToClipboard = () => {\n    resultRef.current.select();\n    document.execCommand('copy');\n    setCopied(true);\n  };\n\n  const onFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onFileUpload = (event) => {\n    setCopied(false);\n    setWaiting(true);\n    let data = new FormData();\n    data.append('file', selectedFile);\n    axios\n      .post(`${baseUrl}/files`, data)\n      .then((res) => {\n        console.log(res);\n        setWaiting(false);\n        setResultPath(baseUrl + res.data.path);\n        copyToClipboard(event);\n      })\n      .catch((err) => {\n        console.log(err);\n        setWaiting(false);\n        setResultPath('#there-was-an-error-pls-check-console');\n      });\n    setSelectedFile(null);\n  };\n\n  return (\n    <>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <div className=\"navbar-brand\"> file upload </div>\n      </nav>\n      <div className=\"container-fluid\">\n        <div className=\"row justify-content-start p-3 m-4 shadow-sm bg-white\">\n          <div className=\"col-md-8\">\n            {resultPath ? (\n              <div className=\"pb-2 mb-4 border-bottom\">\n                {copied && (\n                  <p className=\"text-small text-success mb-2\">\n                    Copied to clipboard!\n                  </p>\n                )}\n                <textarea\n                  ref={resultRef}\n                  defaultValue={resultPath}\n                  className=\"form-control\"\n                ></textarea>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={resultPath}\n                  className=\"btn btn-info mt-2\"\n                >\n                  link\n                </a>\n              </div>\n            ) : (\n              <></>\n            )}\n            <div className=\"input-group mb-2\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={baseUrl ? baseUrl : ''}\n                placeholder=\"Server Base URL? ex: http://localhost:3000\"\n                onChange={onBaseUrlChange}\n              />\n              <button\n                className=\"btn btn-success\"\n                onClick={onBaseUrlSave}\n                disabled={baseUrl ? false : true}\n              >\n                Save\n              </button>\n            </div>\n            <p className=\"text-muted pb-2 mb-2 border-bottom\">\n              Sending files to {baseUrl + '/files'} |{' '}\n              {baseUrlSaved ? (\n                <span className=\"text-success\">Saved</span>\n              ) : (\n                <span className=\"text-danger\">Not saved</span>\n              )}\n            </p>\n\n            {baseUrl && baseUrlSaved ? (\n              <div>\n                <div className=\"pt-3 input-group\">\n                  {!waiting ? (\n                    <>\n                      <div className=\"custom-file\">\n                        <input\n                          type=\"file\"\n                          className=\"custom-file-input\"\n                          name=\"file\"\n                          onChange={onFileChange}\n                        />\n                        <label className=\"custom-file-label\" htmlFor=\"file\">\n                          {selectedFile ? selectedFile.name : 'Choose File'}\n                        </label>\n                      </div>\n                      <div className=\"input-group-append\">\n                        <button\n                          className=\"btn btn-primary\"\n                          disabled={selectedFile ? false : true}\n                          onClick={onFileUpload}\n                        >\n                          Upload\n                        </button>\n                      </div>\n                    </>\n                  ) : (\n                    <p>Uploading...</p>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}